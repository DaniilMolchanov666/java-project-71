package hexlet;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import hexlet.code.Differ;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    private static final File fileJsonFirst = new File("./src/test/resources/FileForTesting1.json");

    private static final File fileJsonSecond = new File("./src/test/resources/FileForTesting2.json");

    private static final File fileYmlFirst = new File("./src/test/resources/FileForTesting3.yml");

    private static final File fileYmlSecond = new File("./src/test/resources/FileForTesting4.yml");

    @Test
    @DisplayName("'stylish' test for 'json' format files:")
    public void stylishJsonTest() throws IOException {
        String actual = Differ.generate(fileJsonFirst, fileJsonSecond, "stylish");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedStylishJson")).trim();
        assertEquals(expected, actual, "for 'json' files");
    }
    @Test
    @DisplayName("'stylish' test for 'yml' format files:")
    public void stylishYmlTest() throws IOException {
        String actual = Differ.generate(fileYmlFirst, fileYmlSecond, "stylish");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedStylishYml")).trim();
        assertEquals(actual, expected, "for 'yml' files");
    }

    @Test
    @DisplayName("'plain' format for 'json' files test:")
    public void plainJsonTest() throws IOException {
        String actual = Differ.generate(fileJsonFirst, fileJsonSecond, "plain");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedPlainJson")).trim();
        assertEquals(actual, expected, "for 'json' files");
    }

    @Test
    @DisplayName("'plain' format for 'yml' files test:")
    public void plainYmlTest() throws IOException {
        String actual = Differ.generate(fileYmlFirst, fileYmlSecond, "plain");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedPlainYml")).trim();
        assertEquals(actual, expected, "for 'yml' files");
    }

    @Test
    @DisplayName("'json' format for 'json' files test:")
    public void jsonFormatForJsonFilesTest() throws IOException {
        String actual = Differ.generate(fileJsonFirst, fileJsonSecond, "json");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedJsonJson"));
        assertEquals(actual, expected, "for 'json' files");
    }

    @Test
    @DisplayName("'json' format for 'yml' files test:")
    public void jsonFormatForYmlFilesTest() throws IOException {
        String actual = Differ.generate(fileYmlFirst, fileYmlSecond, "json");
        String expected = Files.readString(Paths.get("./src/test/resources/ExpectedJsonYml"));
        assertEquals(actual, expected, "for 'yml' files");
    }
}
